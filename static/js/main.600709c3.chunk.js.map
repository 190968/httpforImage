{"version":3,"sources":["apollo.js","serviceWorker.js","bob.js","modal.js","component/buttom_create_account.js","create_account.js","edit_account.js","mainPage.js","Bottom_file_upload.js","component/button_delete_file.js","summer2019.js","modalAddCatalog.js","component/button_rename_folder.js","stat_dir.js","menu.js","index.js","App.js"],"names":["apollo","ApolloClient","uri","Boolean","window","location","hostname","match","unregister","navigator","serviceWorker","ready","then","registration","ACCOUNT_QUERY","gql","_templateObject","Bob","_ref","set_member","name","password","set_bob","_useQuery","useQuery","variables","fetchPolicy","loading","data","react_default","a","createElement","member_verify","message","error","Fragment","SignInWindow","set","_React$useState","React","useState","_React$useState2","Object","slicedToArray","input_name","set_input_name","_React$useState3","_React$useState4","input_password","set_input_password","_React$useState5","_React$useState6","bob_visible","set_bob_visible","style","margin","width","padding","backgroundColor","position","top","left","tooltip","title","fontSize","react_router_dom","to","input","onChange","event","target","value","size","prefix","icon","type","color","placeholder","display","required","es_button","onClick","bob_Bob","ADD_MEMBER","buttom_create_account_templateObject","ButtonCreateAccount","email","age","gender","phone","_useMutation","useMutation","_useMutation2","add_member","success","disabled","length","Number","marginLeft","CreateAccount","_useState","_useState2","setName","_useState3","_useState4","setPhone","_useState5","_useState6","setAge","_useState7","_useState8","setGender","_useState9","concat","_useState10","setEmail","_useState11","_useState12","setPassword","es_form","textAlign","border","labelCol","span","wrapperCol","fontWeight","Item","label","slider","defaultValue","tooltipVisible","es_radio","checked","overlayStyle","buttom_create_account_ButtonCreateAccount","Edit_MEMBER","edit_account_templateObject","graphql","props","mutate","font","MainPage","background","height","List_FILES","Bottom_file_upload_templateObject","ButtonUploadFile","member","file","set_file","file_name","set_file_name","refetchQueries","query","List_QUERY","onCompleted","document","getElementById","backgroundImage","uPload","id","backgroundSize","backgroundPosition","backgroundRepeat","htmlFor","accept","e","preview","file1","files","reader","FileReader","onload","console","log","result","readAsDataURL","cursor","DELETE_FILE","button_delete_file_templateObject","ButtonDeleteFile","deleteFile","summer2019_templateObject","InsideFolder","innerHeight","visible","set_visible","set_size","row","justify","col","lg","resive_list","list","split","map","i","index","key","popover","placement","content","button_delete_file_ButtonDeleteFile","card","hoverable","Bottom_file_upload_ButtonUploadFile","carousel","autoplay","dotPosition","onWheel","CREATE_CATALOG","modalAddCatalog_templateObject","ModalAdd","modal","mode","name_catalog","set_name_catalog","create_catalog","es_modal","onCancel","onOk","allowClear","RENAME_FOLDER","button_rename_folder_templateObject","ButtonRenameFolder","new_name","set_new_name","LIST_DIR","renameFolder","indexOf","DIR_STAT","stat_dir_templateObject","StatDir","z","resive_stat_dir","button_rename_folder_ButtonRenameFolder","popconfirm","menu_templateObject","MainMenu","modal_visible","set_modal_visible","modal_mode","set_modal_mode","useEffect","refetch","resive_list_dir","align","offset","stat_dir_StatDir","modalAddCatalog_ModalAdd","ReactDOM","render","react_common_esm","client","react_router","exact","path","component","modal_SignInWindow","in_member","summer2019_InsideFolder","params","menu_MainMenu","EditAccount"],"mappings":"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","file":"static/js/main.600709c3.chunk.js","sourcesContent":["import ApolloClient from 'apollo-boost';\r\n\r\nexport default new ApolloClient({\r\n  uri: \"http://localhost:5000/\",\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { message  } from 'antd';\r\nconst ACCOUNT_QUERY = gql`\r\n    query ($name: String, $password: String) {\r\n      member_verify(name: $name, password: $password) {\r\n        name\r\n        password\r\n      }\r\n    }\r\n  `;\r\n\r\n \r\nexport const Bob =( { set_member, name, password , set_bob } ) =>  {\r\n  const error = () => {\r\n    message.error(<h3>The name or password are invalid</h3>).then( () =>\r\n    {\r\n      set_bob(false)\r\n    });  \r\n  };\r\n  \r\n  \r\nconst {loading, data } =  useQuery(ACCOUNT_QUERY,{\r\n  variables: { name, password },\r\n  fetchPolicy: 'network-only'\r\n});\r\n     \r\n  if ( loading ) return <p>One moument</p>;\r\n  if ( data.member_verify[0].name === \"guest\" ) { error() };\r\n  \r\n  \r\nreturn ( <>\r\n    <span> {set_member(data.member_verify[0].name)}</span>\r\n    \r\n  </>\r\n);\r\n        \r\n};\r\n","import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport { Input, Icon, Button, Tooltip } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { Bob } from './bob';\r\n\r\n\r\n\r\n\r\n\r\nconst SignInWindow = ( {set} ) =>{\r\n \r\n  const [input_name,set_input_name] = React.useState('');\r\n  const [input_password,set_input_password] = React.useState('');\r\n  const [bob_visible, set_bob_visible] = React.useState(false);\r\n  const divStyle = {  margin:'0 auto', width:'30%', \r\n                      padding: 40,backgroundColor:\"#ddd\",\r\n                      position: 'absolute', top: '10%',left:'35%'\r\n                    } ;\r\n    \r\n         \r\n\r\n  return  <div style={divStyle}>\r\n          <h5>Sign in to your account <br/>\r\n            <Tooltip title=\"create account\">\r\n             <span style={{fontSize:15}}> No account ? </span><Link to='/account_create' style={{fontSize:15}}> Create account</Link>\r\n            </Tooltip>\r\n          </h5>\r\n          <hr/>\r\n          <h6 style={{margin:'10px auto'}}>Name *</h6>\r\n          <Input \r\n            onChange={(event)=>set_input_name(event.target.value)}\r\n            value={input_name}\r\n            size=\"large\"\r\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            placeholder=\"Username\"\r\n            style={{margin:'10px auto',display: 'block'}} required     \r\n          />\r\n\r\n          <h6 style={{margin:'10px auto'}}>Password *</h6>\r\n          \r\n          <Input \r\n            onChange={(event)=>set_input_password(event.target.value)}\r\n            value={input_password}\r\n            size=\"large\"\r\n            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            style={{margin:'10px auto',display: 'block'}} required\r\n          />\r\n          <p style={{margin:'10px auto'}}>\r\n            Forget password ? <Link to=\"/\">Reset password</Link>\r\n          </p>           \r\n          <hr/>\r\n          \r\n               \r\n          <Button type=\"primary\" style={{width:'50%'}}\r\n            onClick={() => { set_bob_visible(true) }}\r\n          >                \r\n            Sign_in \r\n          </Button>        \r\n          { bob_visible && <>\r\n              <Bob  name={input_name} password={input_password} set_member={set} set_bob ={set_bob_visible} />  \r\n            </>\r\n          }           \r\n        </div>\r\n      \r\n        };\r\n  export {SignInWindow};","import React  from 'react';\r\nimport { message, Button } from 'antd';\r\nimport gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\n\r\nconst ADD_MEMBER = gql`\r\n    mutation($name: String,$phone:String,$age:Int,$gender: String,$email: String,$password: String){\r\n        add_member(name: $name,phone: $phone, age: $age, gender: $gender, email: $email, password: $password){\r\n            name\r\n            \r\n        }\r\n    }\r\n`;\r\n\r\nexport const ButtonCreateAccount = ( {name,email,age,gender,password,phone} ) => {\r\n    \r\n    \r\n    const [add_member, { data }] = useMutation(ADD_MEMBER,{\r\n        variables: { name,phone,age,gender,email,password }\r\n    });\r\n    if ( data ) return message.success(data.add_member[0].name)   \r\n    return (\r\n      <Button type=\"primary\" \r\n        disabled = {name.length < 3}\r\n        onClick = {() => {add_member({variables:{name:name,phone:phone,age:Number(age),\r\n            gender:gender,email:email,password:password}})}}\r\n        style = {{display:'inline-block',marginLeft: '10%',width:'40%'}} \r\n      >\r\n        Create_Account\r\n      </Button>\r\n    )\r\n};","import React ,{useState} from 'react';\r\nimport {  Icon, Input ,Button, Form, Radio, Slider, Tooltip } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ButtonCreateAccount } from './component/buttom_create_account';\r\n\r\n\r\nconst CreateAccount = () => {   \r\n    const [name,setName] = useState('');\r\n    const [phone,setPhone] = useState('');\r\n    const [age,setAge] = useState(20);\r\n    const [gender,setGender] = useState('men');\r\n    const [email,setEmail] = useState(`${name}@tut.by`);\r\n    const [password,setPassword] = useState(name);\r\n    const onChange = (value) => {\r\n        setAge(value)\r\n    }\r\n    \r\n\r\n    return (     \r\n        \r\n        <Form \r\n          style={{textAlign:'center', margin:'0 auto', width:'40%',position: 'absolute',\r\n            top:'10%',left:\"30%\",\r\n            border:'5px solid #ccc', padding: 20, backgroundColor:\"#ddd\"\r\n          }}\r\n          labelCol={{ span: 7 }} wrapperCol={{ span: 12 }}\r\n        >\r\n            <h3 style={{textAlign:\"left\",fontWeight: 600}}>Create_Account</h3>\r\n            <hr/>\r\n            <Form.Item label=\"Name\">\r\n            <Input value={name} onChange={(event)=>setName(event.target.value)} \r\n                 prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }}/>}\r\n                 placeholder = \"Username\"\r\n            />\r\n           \r\n            </Form.Item >\r\n            <Form.Item label=\"Phone\">           \r\n                <Input value={phone} onChange={(event)=>setPhone(event.target.value)}\r\n                 prefix={<Icon type=\"phone\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                 placeholder=\"Phone\"\r\n            />\r\n           \r\n            </Form.Item>\r\n            <Form.Item label=\"Age\">\r\n           \r\n                <Slider  onChange={onChange} defaultValue={20} tooltipVisible value={age}/>\r\n          \r\n            </Form.Item>\r\n            <Form.Item label=\"Gender\">\r\n              <Tooltip title = \"man\">\r\n               <Radio onChange={()=>setGender('men')} checked={gender==='men'?true:false}>\r\n                    <Icon type=\"man\" style={{ color: 'rgba(0,0,0,.25)', fontSize: 25 }} />\r\n               </Radio>\r\n              </Tooltip>\r\n              <Tooltip title = \"women\" overlayStyle={{color:\"red\"}}>\r\n               <Radio onChange={()=>setGender('women')} checked={gender==='women'?true:false}>\r\n                    <Icon type=\"woman\" style={{ color: 'rgba(0,0,0,.25)' ,fontSize: 25}} />\r\n                </Radio>\r\n                </Tooltip>     \r\n            </Form.Item>\r\n            \r\n            <Form.Item label=\"Email\">\r\n            \r\n                <Input value={`${name}@tut.by`} onChange={(event)=>setEmail(event.target.value)}\r\n                \r\n                 placeholder=\"@ Email\"\r\n                \r\n                />\r\n           \r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Password\">\r\n            \r\n                <Input value={password} onChange={(event)=>setPassword(event.target.value)}\r\n                 prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                 placeholder=\"Password\"\r\n                />\r\n           \r\n            </Form.Item>\r\n            <hr/>\r\n            <p style={{width:'70%',margin:'10px auto'}}>\r\n                <Button  style={{display:'inline-block',width:'40%'}} ><Link to=\"/\">cancel</Link></Button>\r\n                <ButtonCreateAccount name={name} phone={phone} password={password} age={age} email={email} gender={gender} />\r\n            </p> \r\n        </Form>\r\n        \r\n   \r\n    );\r\n    \r\n   \r\n   \r\n     \r\n};\r\n\r\n\r\n\r\nexport default (CreateAccount);    \r\n","import React ,{useState} from 'react';\r\nimport { Input ,Button, Form, Radio} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport gql from 'graphql-tag';\r\nimport { graphql } from 'react-apollo';\r\n\r\n\r\nconst EditAccount = (props) => {\r\n    const { mutate } = props;\r\n   \r\n    const [name,setName] = useState('');\r\n    const [phone,setPhone] = useState('');\r\n    const [age,setAge] = useState();\r\n    const [gender,setGender] = useState('male');\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    return (     \r\n        \r\n        <Form \r\n        style={{textAlign:'center',font:\"600 18px/20px 'Arial',sans-serif\",\r\n        margin:'100px auto',width:'70%',border:'1px solid #ddd',padding: 20,backgroundColor:\"#ccc\"\r\n        }}\r\n             labelCol={{ span: 7 }} wrapperCol={{ span: 12 }}>\r\n            <p>Edit account {name} </p>\r\n            <Form.Item label=\"Name\">\r\n            <Input value={name} onChange={(event)=>setName(event.target.value)} />\r\n           \r\n            </Form.Item >\r\n            <Form.Item label=\"Phone\">           \r\n                <Input value={phone} onChange={(event)=>setPhone(event.target.value)} />\r\n           \r\n            </Form.Item>\r\n            <Form.Item label=\"Age\">\r\n           \r\n                <Input value={age} onChange={(event)=>setAge(event.target.value)} />\r\n          \r\n            </Form.Item>\r\n            <Form.Item label=\"Gender\">\r\n            \r\n               <Radio onChange={()=>setGender('men')} checked={gender==='men'?true:false}>Male</Radio>\r\n               <Radio onChange={()=>setGender('women')} checked={gender==='women'?true:false}>Female</Radio>\r\n           \r\n            </Form.Item>\r\n            \r\n            <Form.Item label=\"Email\">\r\n            \r\n                <Input value={email} onChange={(event)=>setEmail(event.target.value)}/>\r\n           \r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Password\">\r\n            \r\n                <Input value={password} onChange={(event)=>setPassword(event.target.value)}/>\r\n           \r\n            </Form.Item>\r\n           \r\n            <Button size=\"large\" style={{display:'inline-block'}} ><Link to=\"/\">cancel</Link></Button>\r\n            <Button type=\"primary\" \r\n                disabled = {name.length < 2}\r\n                onClick={() => {mutate({variables:{name:name,phone:phone,age:Number(age),gender:gender,email:email,password:password}})}}\r\n                style={{display:'inline-block',marginLeft: 10}}\r\n                size=\"large\"\r\n            >\r\n              Edit_Account\r\n            </Button>\r\n              \r\n        </Form>\r\n        \r\n   \r\n    );\r\n    \r\n   \r\n   \r\n     \r\n};\r\n\r\nconst Edit_MEMBER = gql`\r\n    mutation($name: String,$phone:String,$age:Int,$gender: String,$email: String,$password: String){\r\n        edit_member(name: $name,phone: $phone, age: $age, gender: $gender, email: $email, password: $password){\r\n            name\r\n            phone\r\n            age\r\n            gender\r\n            email\r\n            password\r\n        }\r\n    }\r\n`;\r\n\r\nexport default graphql(Edit_MEMBER)(EditAccount);    \r\n","import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nexport const MainPage = () => {\r\n    return (\r\n        <div style={{background:'#ccc url(\"http://localhost:3000/main_image.jpg\") no-repeat center/100% ',height:\"670px\"}}>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport gql from 'graphql-tag';\r\nimport { Button,  Icon } from 'antd';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { List_QUERY } from './summer2019';\r\n\r\n\r\nconst List_FILES = gql`\r\n    mutation ($file: Upload!,$name: String, $member: String, $file_name: String) {\r\n      uPload(file: $file,name: $name, member: $member, file_name: $file_name) {\r\n        filename\r\n       \r\n      }\r\n    }\r\n`;\r\nexport const ButtonUploadFile = ({name, member}) => {\r\n  const [file, set_file ] = React.useState('');\r\n  const [file_name,set_file_name] = React.useState('');\r\n  \r\n   function preview(e) {\r\n    var preview = document.getElementById(\"img\");\r\n   \r\n    var file1 = document.getElementById(\"upload_file\").files[0];\r\n    var reader = new FileReader();   \r\n\r\n    reader.onload = function (e) {    \r\n      console.log(`Name:${file1.name},Type file:${file1.type},${file1.size}`);\r\n      set_file(reader.result);\r\n      set_file_name(`${file1.name}`);\r\n      preview.style.backgroundImage = `url(${reader.result})`;\r\n     \r\n      \r\n    }\r\n    reader.readAsDataURL(file1);    \r\n    \r\n  };\r\n\r\n  const  [ uPload, {data}, loading ,error] = useMutation( List_FILES,{\r\n    variables: {file: file, name: name, member: member, file_name: file_name},\r\n    refetchQueries: () => [{query: List_QUERY, variables: {name:name, member:member} }],\r\n    onCompleted:() => (set_file(''),document.getElementById('img').style.backgroundImage = null,\r\n    set_file_name(''))\r\n  }); \r\n    if ( loading ) return <p>Loading</p>;\r\n    if ( error ) return <p>error.message</p>;    \r\n     return (      \r\n        \r\n      <div   id=\"img\" \r\n        style={{height: 200,\r\n        backgroundSize: \"100%\",\r\n        backgroundPosition: \"center\",\r\n        backgroundColor: \"rgba(255,255,0, 0.5)\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        width: 200, margin: 10,border:\"2px solid #ccc\"}}\r\n      > \r\n      { !file_name && \r\n\r\n\r\n        <label htmlFor = \"upload_file\" > \r\n        <input type=\"file\" \r\n          id=\"upload_file\"\r\n          style={{display:\"none\"}}\r\n          accept=\".jpg,.jpeg\"        \r\n          onChange = {(e)=>preview(e)}          \r\n        />          \r\n          <Icon type =\"upload\" style={{fontSize:40,margin:\"80px auto 10px\",cursor:\"pointer\"}} />\r\n        </label> \r\n        \r\n         }\r\n       { file_name &&  \r\n        <Button type=\"primary\"\r\n          style={{margin:\"80px auto 10px\"}}\r\n          onClick = {()=> uPload()}>\r\n          upload\r\n        </Button> \r\n       }\r\n     </div>\r\n      )\r\n};       ","import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport gql from 'graphql-tag';\r\nimport { Button } from 'antd';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { List_QUERY } from '../summer2019';\r\n\r\n\r\nconst DELETE_FILE = gql`\r\n    mutation ($name: String, $member: String,$file: String) {\r\n      deleteFile(file: $file,name: $name, member: $member) {\r\n        name\r\n       \r\n      }\r\n    }\r\n`;\r\nexport const ButtonDeleteFile = ({name, member, file}) => {\r\n  \r\n  \r\n\r\n  const  [ deleteFile, { data } ,loading ,error] = useMutation( DELETE_FILE,{\r\n    variables: {file: file, name: name, member: member},\r\n    refetchQueries: ()=>[{query: List_QUERY, variables: {name:name, member:member} }]    \r\n  }); \r\n    if ( loading ) return <p>Loading</p>;\r\n    if ( error ) return <p>error.message</p>;    \r\n     return (          \r\n        <Button type=\"danger\"\r\n          size=\"small\"\r\n          icon=\"delete\"\r\n          onClick = {()=> deleteFile()} \r\n        />   \r\n     \r\n      )\r\n};       ","import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport gql from 'graphql-tag';\r\nimport { Carousel ,Row, Col ,  Icon, Popover, Card} from 'antd';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonUploadFile } from './Bottom_file_upload';\r\nimport { ButtonDeleteFile } from './component/button_delete_file';\r\n\r\nexport const List_QUERY = gql`\r\n    query ($name: String, $member: String) {\r\n      resive_list(name: $name, member: $member) {\r\n        list\r\n      }\r\n    }\r\n`;\r\n\r\nexport const InsideFolder = ( {name, member} ) => {\r\n    const height = window.innerHeight - 10;\r\n    const [visible, set_visible] = React.useState(true);\r\n    const [size, set_size ] = React.useState(100);\r\n    const {loading,data} = useQuery( List_QUERY ,{\r\n       fetchPolicy: \"network-only\",\r\n       variables: {name, member}\r\n       });\r\n       \r\n    if ( loading ) return <p style={{textAlign:\"center\"}}>Loading</p>\r\n    return <div>\r\n    {visible ? \r\n     <Row   justify=\"center\" type=\"flex\" >\r\n      <Col lg = {{ span : 4 }} \r\n        style={{textAlign:\"center\",margin:10  ,border:\"2px solid #ccc\",height: 200, width: 200,}}\r\n      >         \r\n        <Link to = \"/main\" name = { member }>\r\n         <Icon type=\"arrow-left\" style={{font:\"400 40px/200px 'Arial', sans-serif\", cursor:\"pointer\",  }} />\r\n        </Link>       \r\n      </Col>\r\n      \r\n        {(data.resive_list[0].list).split(\",\",data.resive_list[0].list === ''? 0 : 1000 ).map( (i,index) =>\r\n          \r\n          <Col lg = {{ span : 4 }} key={index} > \r\n            <Popover  placement=\"topRight\" content={<ButtonDeleteFile name={name} member={member} file={i}/>} >\r\n              <Card               \r\n                hoverable = \"true\"             \r\n                onClick = {()=> set_visible(false)}\r\n                style={{background:`url(http://localhost:3000/members/${member}/${name}/${i}) no-repeat  center/auto 100%`,\r\n                height: 200,margin: 10 , cursor: 'pointer'}}\r\n              >   \r\n              </Card>\r\n            </Popover>   \r\n          </Col>\r\n           \r\n        )}\r\n        <Col lg = {{ span : 4 }} style={{textAlign:\"center\"}}>\r\n         \r\n         \r\n          <ButtonUploadFile name={name} member={member} />\r\n        \r\n        </Col>\r\n    </Row> :\r\n    \r\n    <Carousel autoplay dotPosition=\"bottom\">        \t\t\t\t\t\r\n\t\t {(data.resive_list[0].list).split(\",\").map((i,index)=>\r\n      <div style={{margin: 0}}  key={index}>\r\n\t\t\t  <div style={{background:` url(http://localhost:3000/members/${member}/${name}/${i}) no-repeat  center/auto ${size}%`,\r\n           height: height ,margin: 0}}\r\n           onClick = {() => set_visible(true)}\r\n           onWheel = {() => set_size( size < 160 ? size + 10 : 100  )}\r\n           title = \"click:back,leave:slide\"\r\n        >   \r\n        </div>\r\n\t\t  </div>\r\n     )}\r\n    </Carousel>\r\n    }\r\n   </div>\r\n   \r\n}"," import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport {  Modal, Input } from 'antd';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\n\r\nconst CREATE_CATALOG = gql`\r\n    mutation ($name: String, $member: String, $mode: String) {\r\n      create_catalog(name: $name,  member: $member, mode: $mode) {\r\n        name        \r\n      }\r\n    }\r\n  `; \r\nexport const ModalAdd =( { modal , set, member, mode } ) =>  {\r\n const [name_catalog,set_name_catalog] = React.useState('');   \r\nconst [create_catalog] =  useMutation(CREATE_CATALOG);  \r\nreturn ( <>\r\n   <Modal visible = {modal} \r\n      title = {`${mode}  FOLDER`}\r\n      onCancel={()=>set(false)} \r\n      onOk={(e)=>{create_catalog({variables: {name: name_catalog, member: member,mode: mode}});set(false)}}    > \r\n           Name of catalog: \r\n           <Input\r\n             placeholder=\"input folder name\"\r\n             allowClear\r\n             value= {name_catalog} \r\n             type= \"text\" \r\n             style={{width: 200}} \r\n             onChange={(event)=>{set_name_catalog(event.target.value)}}\r\n            />\r\n\r\n    </Modal>   \r\n    \r\n  </>\r\n);\r\n        \r\n};\r\n\r\n \r\n \r\n ","import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport gql from 'graphql-tag';\r\nimport { Button, Input } from 'antd';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { LIST_DIR } from '../menu';\r\n\r\n\r\nconst RENAME_FOLDER = gql`\r\n    mutation ($name: String!, $member: String!, $new_name: String! ) {\r\n      renameFolder(name: $name, member: $member, new_name: $new_name) {\r\n        new_name\r\n      }\r\n    }\r\n`;\r\n\r\nexport const ButtonRenameFolder = ({ name,member , list}) => {\r\n    const [ new_name, set_new_name ] = React.useState(''); \r\n    const onChange =(e) => {\r\n        set_new_name(e.target.value)\r\n    }  \r\n    const [ renameFolder,{ data },loading ] = useMutation( RENAME_FOLDER ,\r\n        {\r\n          refetchQueries: () => [{query: LIST_DIR,variables:{ name: member }}]\r\n        });     \r\n       if ( loading ) return <p>Loading</p>\r\n       if ( data ) {};\r\n       return (\r\n           <> \r\n            <Button type=\"primary\" style={{width:\"100%\",margin:\"10px 0\"}}\r\n              disabled = {(list.indexOf(new_name) > 0 || new_name.length < 1)}\r\n              onClick = {()=> renameFolder({variables: { name: name,member: member,new_name: new_name } })}>\r\n                rename\r\n            </Button>          \r\n           <Input type=\"text\" \r\n                placeholder=\"New name\"\r\n                value={new_name}\r\n                onChange = {onChange}\r\n            />            \r\n        </>\r\n       )\r\n};       ","import React from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Button, Popconfirm} from 'antd';\r\nimport { ButtonRenameFolder } from './component/button_rename_folder';\r\n\r\nconst DIR_STAT = gql`\r\n    query ($name: String, $member: String ) {\r\n      resive_stat_dir(name: $name, member: $member) {\r\n        list\r\n      }\r\n    }\r\n  `;\r\n\r\nexport const StatDir = ( { name, member, list } ) => { \r\n    \r\n    //Query to server for stat folders\r\n    const { loading, data, error } = useQuery(DIR_STAT,{\r\n             fetchPolicy: \"network-only\",\r\n             variables: { name, member } ,\r\n    });\r\n\r\n    if ( loading ) return <p>Loading</p>\r\n    if ( error ) return <p>{error.message}</p>\r\n\r\n    const z = data.resive_stat_dir[0].list || \"\";\r\n   \r\n    return <>\r\n        <p style={{font:'600 16px/16px \"Arial\", sans-serif',width:100}}>Inside:{z} files</p>\r\n        <ButtonRenameFolder   name= {name}  member={member} list = {list} />\r\n        <Popconfirm placement=\"rightTop\" title=\"Delete folder and all files\">\r\n          <Button type=\"primary\" style={{margin:\"10px 0\",width:\"100%\",display:\"block\"}}>\r\n            Delete\r\n          </Button>\r\n        </Popconfirm>\r\n       \r\n    </>\r\n};","import React, {useEffect} from 'react';\r\nimport \"antd/dist/antd.css\";\r\nimport gql from 'graphql-tag';\r\nimport {  Icon,  Tooltip,  Popover, Row, Col } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { ModalAdd } from './modalAddCatalog';\r\nimport { StatDir } from './stat_dir';\r\n\r\n\r\nconst LIST_DIR = gql`\r\n    query ($name: String) {\r\n      resive_list_dir(name: $name) {\r\n        list\r\n      }\r\n    }\r\n  `;\r\n\r\nconst MainMenu = ( { name , set } ) => { \r\n    const [modal_visible, set_modal_visible] = React.useState(false);\r\n    \r\n    const [modal_mode, set_modal_mode] = React.useState('add');\r\n\r\n    useEffect(()=>{ refetch();},[modal_visible]);\r\n   \r\n\r\n    const height = window.innerHeight;\r\n    //Query to server for list folders\r\n    const {loading, data, error, refetch} = useQuery(LIST_DIR,{\r\n             fetchPolicy: \"network-only\",\r\n             variables: { name } ,\r\n    });\r\n\r\n    if ( loading ) return <p>Loading</p>\r\n    if ( error ) return <p>{error.message}</p>\r\n\r\n    const z = data.resive_list_dir[0].list || \"\";\r\n   \r\n    return <div style={{background:'#fff',height: height,padding:'20px 100px'}}>\r\n      \r\n      \r\n        \r\n       \r\n        <Tooltip title = \"delete\" placement=\"top\">\r\n            <Icon \r\n              type=\"delete\"  \r\n              style={{fontSize:30,color:\"#000\"}}\r\n              onClick={()=>{set_modal_visible(true);set_modal_mode('del')}}            \r\n            /> \r\n        </Tooltip>\r\n       \r\n        <Row type=\"flex\" justify=\"center\" align=\"middle\"> \r\n            <Col lg = {{span : 6, offset : 1}}>\r\n              <Tooltip title=\"close account\">\r\n                <Icon type=\"folder-open\" style={{fontSize:100,color: \"#ccc\"}} \r\n                  onClick={()=>set('guest')}  \r\n                />\r\n              </Tooltip>   \r\n            </Col>        \r\n            {(z?z.split(\",\"):[]).map( (i) =>            \r\n            <Col lg = {{span : 6, offset : 1}} key={i}> \r\n             <Popover title = {`Folder ${i}`} \r\n              content = {<StatDir  name = {i} member = {name} list = {z}/>}\r\n              placement=\"left\"\r\n            >              \r\n              <Link to = { `/inside/${name}/${i}` } style={{ fontSize:30,fontWeight: 400 }}>  \r\n               \r\n                  <Icon type=\"folder\" style={{fontSize:100,color: \"#ccc\"}}/>                   \r\n                  {i}\r\n               \r\n              </Link>\r\n              </Popover> \r\n            </Col>       \r\n            )} \r\n            <Col lg = {{span : 6, offset : 1}}>\r\n              <Tooltip title=\"add folder\">\r\n                <Icon type=\"folder-add\" style={{fontSize:100,color: \"#ccc\"}} \r\n                  onClick={()=>{set_modal_visible(true);set_modal_mode('add')}}   \r\n                />\r\n              </Tooltip>   \r\n            </Col>        \r\n        </Row>       \r\n      <ModalAdd  modal = {modal_visible} set={set_modal_visible} member = {name} mode = { modal_mode }/>\r\n\t</div>\t\t\t\r\n};\r\nexport {MainMenu, LIST_DIR};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport client from './apollo';\n\n\nimport * as serviceWorker from './serviceWorker';\nimport { App } from './App';\n\nReactDOM.render( \n  <ApolloProvider client={client}>   \n    <App />    \n  </ApolloProvider>\n ,\n  document.getElementById('root')\n);\n serviceWorker.unregister();\nif (module.hot) module.hot.accept();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Route, Switch, Redirect} from 'react-router-dom';\nimport \"antd/dist/antd.css\";\nimport { SignInWindow } from './modal';\nimport  CreateAccount  from './create_account';\nimport EditAccount from './edit_account';\nimport { BrowserRouter } from 'react-router-dom';\nimport { MainPage } from './mainPage';\nimport { InsideFolder } from './summer2019';\n\nimport { MainMenu } from './menu';\n\nconst  App = () => {\n  const [member,set_member] = React.useState('guest');\t\n  \treturn  (\n\t  <BrowserRouter>\n\t\t<Switch>\t\t\n\t\t\t<Route exact path = \"/\" component = { () =>( \n\t\t\t\tmember === 'guest' ? (\n\t\t\t\t<SignInWindow set={set_member} in_member={member} />\n\t\t\t\t) : ( \n\t\t\t\t   <Redirect to = \"/main\"  name = { member } set = { set_member } />\n\t\t\t\t)\n\t\t\t)}/>\t\t\n\t\t\t<Route path = \"/ff\" component = { MainPage }/>\n\t\t\t<Route path = \"/inside/:member/:name\" component = {(props) =>\n\t\t\t <InsideFolder member={props.match.params.member} name={props.match.params.name} /> }/>\n\t\t\t\n\t\t\t<Route path = \"/main\" component = {() => (\n\t\t\t  member === 'guest' ? (\n\t\t\t  <Redirect to = \"/\" set={set_member} in_member={member} />\n\t\t\t\t) : ( \n\t\t\t\t   <MainMenu name = { member } set = { set_member } />\n\t\t\t\t)\n\t\t\t  )\n\t\t\t}/>\t\t\t\n\t\t\t<Route path = \"/account_create\" component={CreateAccount} />\n\t\t\t<Route path = \"/account_edit\" component={EditAccount} />\t\t\t\n\t\t</Switch>\n\t  </BrowserRouter>\t  \n\t)\n};\nexport { App };"],"sourceRoot":""}